floated grid columns


<!-- <section class="grid-test">
      <div class="row">
        <div class="col-1-of-2">
          Col 1 of 2
        </div>
        <div class="col-1-of-2">
          Col 1 of 2
        </div>
      </div>

      <div class="row">
        <div class="col-1-of-3">
          Col 1 of 3
        </div>
        <div class="col-1-of-3">
          Col 1 of 3
        </div>
        <div class="col-1-of-3">
          Col 1 of 3
        </div>
      </div>

      <div class="row">
        <div class="col-1-of-3">
          Col 1 of 3
        </div>
        <div class="col-2-of-3">
          Col 2 of 3
        </div>
      </div>

      <div class="row">
        <div class="col-1-of-4">
          Col 1 of 4
        </div>
        <div class="col-1-of-4">
          Col 1 of 4
        </div>
        <div class="col-1-of-4">
          Col 1 of 4
        </div>
        <div class="col-1-of-4">
          Col 1 of 4
        </div>
      </div>

      <div class="row">
        <div class="col-1-of-4">
          Col 1 of 4
        </div>
        <div class="col-1-of-4">
          Col 1 of 4
        </div>
        <div class="col-2-of-4">
          Col 2 of 4
        </div>
      </div>

      <div class="row">
        <div class="col-1-of-4">
          Col 1 of 4
        </div>
        <div class="col-3-of-4">
          Col 3 of 4
        </div>
      </div>
    </section> -->



Media queries... I think they can be named better in the mixins

xlrg-2000
padl-1200
pads-900
phone-600

// Media Query Manager

/*
@include respond(tab-land) {  }   // < 1200px
@include respond(tab-port) {  }   //< 900 px
@include respond(phone) {  }      //< 600 px
@include respond(big-desktop) {  }//> 1800 px



// want 1rem = 12px  so  12/16 = .75
@include respond(big-desktop) {
  font-size: 75%;
}     // > 1800

*/

//   0   -   600   Phone
//   600 -   900   Tablet portrait
//   900 -  1200   Tablet landscape
// [1200 - 1800 ]   Desktop normal
// 1800 +        Large Desktop

/*
$breakpoint argument choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER to apply breakpoints:

Base + typography

General Layout   + Grid

Page Layout

Components







*/
// max-width =  is the width less that the breakpoint?

// 1 em = 16px

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media (max-width: 37.5em) {
      @content;
    } // 600 px   / 16 = 37.5 em       not   rem   em tied to default. rem tied to page
  }


adjust css to ipad screens without hover capability (will have to custom make this query and remove the mixin query):


 @media only screen and (max-width: 56.25em),
    only screen and (hover: none) {

   ...in this case uses card with button on the front instead of the card that flips over on hover
    }

if you want to designate only screens that you CAN hover use:   and (hover: hover)



image responsive using html

             <img
                class="composition__photo composition__photo--p3"
                alt="Photo 3"
                srcset="img/nat-3.jpg 300w, img/nat-3-large.jpg 1000w"
                sizes="(max-width:56.25em) 20vw, (max-width:37.5em) 30vw, 300px "
                src="img/nat-3-large.jpg"
              />

notes:
                1. use src=  as a backup in ase browser doesn't recognize srcset
                2. srcset= get actual width from img size in img folder as shown in bottom line of vscodefile:  show 300px as 300w
                3. sizes= at the stated breakpoint width, inspect the img and get px wide. Divide the px wide by the breakpoint px width (171/900 = 20%  show 20vw after media query info)

                this will allow broswer to pick picture based on browser px density and im





image responsive using css: 

    @media (min-resolution: 192dpi) and (min-width: 37.5em), (min-width: 125em) {
    background-image: linear-gradient(
        to right bottom,
        rgba($color-secondary-light, 0.5),
        rgba($color-secondary-dark, 0.5)
      ),
      url(/img/hero.jpg);
  }
  

  1. min-resolution 192dpi is 2 DPR (apple retina), comma after min-width is same as "or"

  2. convert px to "em" by dividing pixels by 16 (default font size)  so above 600 break is 600/19 or 37.5em

 

 ******* graceful degradation:  using "feature queries"

 conditionally using css commands that may not be supported on all browsers:

 use:     https://caniuse.com/   to test commands   then to conditionally use the command, use this syntax:


 @supports (-webkit-backdrop-filter: blur(10px)) or (backdrop-filter: blur(10px)) {
  
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  background-color: rgba($color-black, 0.3); 

  }

  -webkit-   is used when a prefix is called for


*** setting up, using and compiling liveSass for deployment

  liveSass settings are located in the vscode settings file.  Click the settings tool and search for liveSass.

  Can also set up autoprefixing in this file. 


  Final minify:  use the concat:css in the package.json file in scripts: 

  "scripts": {
    
    "concat:css": "concat -o css/style.css css/icon-font.css css/main.min.css"
  },

  then minify the concatted file and hook the index.html file up to the style.min.cs




  ***** Limit media queries to screen (not to printing):

  @media only screen and (max-width: 75em) 

  ***** change text selection color universally

  ::selection {
  background-color: $color-primary;
  color: $color-white;
}

**** must have this line in <head> of html file:

 <meta name="viewport" content="width=device-width, initial-scale=1.0" />



scss file structure

scss--
      abstracts --
        _function.scss
        _mixins.scss
        _utilities.scss
        _variables.scss

      base --
        _animation.scss
        _base.scss
        _typography.scss
        _utilities.scss

      components --
        (examples)
        _button.scss
        _bg-video.scss
        _form.scss
        _popup.scss

      layout --
        _header.scss
        _footer.scss
        _grid.scss
        _navigation.scss

       pages --
        _home.scss

    main.scss    (imports all other scss files) 

    liveSass will then compile into the path set in vscode settings for liveSass
    (in this case it will be main.scss)   
